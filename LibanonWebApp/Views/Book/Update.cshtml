@model LibanonWebApp.Models.Book

@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card">
    <div class="card-body">
        <h3 class="card-title">Update book information</h3> <hr /> <br />

        @using (Html.BeginForm("Update", "Book", FormMethod.Post, new { @id = "BookInfoForm" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal col-md-6" style="float:left">
                <h4 class="card-title text-primary">Book Information</h4>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.BookId)
                @Html.HiddenFor(model => model.Confirmation.ConfirmationId)
                @Html.HiddenFor(model => model.Confirmation.OTP)

                <div class="form-group">
                    @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        <img src="@Url.Content("~/Content/Image/"+Model.Image)" id="ImagePreview" height="150px" width="150px" />
                        <input type="file" class="form-control" id="Image" name="Image" onchange="ImgPreview(this)" />
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Summary, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ISBN.ISBNCode, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ISBN.ISBNCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ISBN.ISBNCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-horizontal col-md-6" style="float:left">
                <h4 class="card-title text-primary">Owner Information</h4>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.BookId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Owner.OwnerName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Owner.OwnerName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Owner.OwnerName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Owner.OwnerPhone, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Owner.OwnerPhone, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Owner.OwnerPhone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Owner.OwnerEmail, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Owner.OwnerEmail, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Owner.OwnerEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }


        @if (Session["BookUpdate"] == null)
        {
            <div class="form-group row">
                <div class="col-sm-10">
                    <input type="submit" form="BookInfoForm" value="Send request" class="btn btn-sm btn-primary font-weight-bold w-25" />
                    @Html.ActionLink("Back to list", "Index", null, htmlAttributes: new { @class = "btn btn-sm btn-secondary font-weight-bold w-25" })
                </div>
            </div>
        }
        else
        {            
            using (Html.BeginForm("ConfirmOtp", "Book", FormMethod.Post))
            {
                <div class="form-group row">
                    <div class="col-sm-10">
                        <h4 class="card-title text-primary">OTP Code</h4>
                        <input type="text" name="OtpValue" class="form-control col-md-10 mb-3" />
                        @if(ViewBag.OTPMessage != null)
                        {
                            <h4 class="text-danger">@ViewBag.OTPMessage</h4>
                        }
                        <input type="submit" value="Update" class="btn btn-sm btn-primary font-weight-bold w-25" />
                        @Html.ActionLink("Back to list", "Index", null, htmlAttributes: new { @class = "btn btn-sm btn-secondary font-weight-bold w-25" })
                    </div>
                </div>
            }
        }

    </div>
</div>

<script>
    function ImgPreview(input) {
        if (input.files[0]) {
            var uploading = new FileReader();
            uploading.onload = function (displayimg) {
                $("#ImagePreview").attr('src', displayimg.target.result);
            }
            uploading.readAsDataURL(input.files[0]);
        }
    }
</script>